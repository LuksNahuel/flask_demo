name: "main workflow!"

on:
  push:
    branches:
      - main

env:
  GITHUB_REGISTRY: ghcr.io
  GITHUB_REGISTRY_USER: ${{ github.actor }}
  GITHUB_REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
  GITHUB_SHA: ${{ github.sha }}

jobs:
  app-build-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Push flask app image
        run: |
          cd app
          docker login -u $GITHUB_REGISTRY_USER -p $GITHUB_REGISTRY_PASSWORD $GITHUB_REGISTRY
          docker build --tag $GITHUB_REGISTRY/$GITHUB_REPOSITORY/app:latest .
          docker push $GITHUB_REGISTRY/$GITHUB_REPOSITORY/app:latest
  proxy-build-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Push nginx proxy image
        run: |
          cd proxy
          docker login -u $GITHUB_REGISTRY_USER -p $GITHUB_REGISTRY_PASSWORD $GITHUB_REGISTRY
          docker build --tag $GITHUB_REGISTRY/$GITHUB_REPOSITORY/proxy:latest .
          docker push $GITHUB_REGISTRY/$GITHUB_REPOSITORY/proxy:latest

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: [app-build-image, proxy-build-image]
  #   timeout-minutes: 10
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     - name: Copy docker-compose file to ec2
  #       uses: garygrossgarten/github-action-scp@release
  #       with:
  #         local: /home/runner/work/finanz/finanz/tools/provisioning/staging/docker-compose/docker-compose.yml
  #         remote: /home/ec2-user/docker-compose.yml
  #         host: ${{ secrets.AWS_EC2_HOSTNAME }}
  #         username: ${{ secrets.AWS_EC2_USER_NAME }}
  #         privateKey: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
  #         rmRemote: true
  #     - name: Deploy to EC2 via SSH action
  #       uses: garygrossgarten/github-action-ssh@release
  #       with:
  #         host: ${{ secrets.AWS_EC2_HOSTNAME }}
  #         username: ${{ secrets.AWS_EC2_USER_NAME }}
  #         privateKey: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
  #         command: |
  #           docker login -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} ghcr.io
  #           docker rmi $(docker images --filter "dangling=true" -q --no-trunc)
  #           docker-compose pull
  #           docker-compose up -d
